{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johny\\\\Documents\\\\SEJADEV\\\\imc\\\\components\\\\Calculator\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { Container, Grid, Typography, TextField, Button } from '@material-ui/core';\nimport styles from './Calculator.module.scss';\n\nfunction Calculator() {\n  _s();\n\n  var _useState = useState(0),\n      altura = _useState[0],\n      setAltura = _useState[1];\n\n  var _useState2 = useState(0),\n      peso = _useState2[0],\n      setPeso = _useState2[1];\n\n  var _useState3 = useState(0),\n      imc = _useState3[0],\n      setImc = _useState3[1];\n\n  var calculateImc = function calculateImc() {\n    alert(\"ARROTO\");\n    var alturam = altura / 100;\n    setImc((peso / (alturam * alturam)).toFixed(2));\n  };\n\n  var verifyImc = function verifyImc() {\n    if (imc < 18.5) return \"Abaixo do peso\";\n    if (imc < 24.9) return \"Peso normal\";\n    if (imc < 29.9) return \"Sobrepeso\";\n    if (imc < 34.9) return \"Obesidade grau 1\";\n    if (imc < 39.9) return \"Obesidade grau 2\";\n    return \"Obesidade grau 3\";\n  };\n\n  return __jsx(\"div\", {\n    className: styles.calculator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"CALCULADORA\"), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    label: \"Altura em cm\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    value: altura,\n    onChange: function onChange(_ref) {\n      var target = _ref.target;\n      return setAltura(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, __jsx(TextField, {\n    label: \"Peso em KG\",\n    variant: \"filled\",\n    fullWidth: true,\n    type: \"number\",\n    value: peso,\n    onChange: function onChange(_ref2) {\n      var target = _ref2.target;\n      return setPeso(target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: function onClick() {\n      return calculateImc();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Calcular\")), imc && __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"O seu IMC \\xE9: \", imc, \" kg/m2 - \", verifyImc())))));\n}\n\n_s(Calculator, \"UrG2uJtkxgIzLEKZ0gMS6U51lD0=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["C:/Users/johny/Documents/SEJADEV/imc/components/Calculator/index.js"],"names":["useState","Container","Grid","Typography","TextField","Button","styles","Calculator","altura","setAltura","peso","setPeso","imc","setImc","calculateImc","alert","alturam","toFixed","verifyImc","calculator","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { Container, Grid, Typography, TextField, Button } from '@material-ui/core'\r\n\r\nimport styles from './Calculator.module.scss'\r\n\r\nfunction Calculator() {\r\n\r\n    const [altura, setAltura] = useState(0)\r\n    const [peso, setPeso] = useState(0)\r\n    const [imc, setImc] = useState(0)\r\n\r\n    const calculateImc = () => {\r\n        alert(\"ARROTO\")\r\n        const alturam = altura / 100\r\n        setImc((peso / (alturam * alturam)).toFixed(2))\r\n    }\r\n\r\n    const verifyImc = () => {\r\n        if (imc < 18.5) return \"Abaixo do peso\"\r\n        if (imc < 24.9) return \"Peso normal\"\r\n        if (imc < 29.9) return \"Sobrepeso\"\r\n        if (imc < 34.9) return \"Obesidade grau 1\"\r\n        if (imc < 39.9) return \"Obesidade grau 2\"\r\n        return \"Obesidade grau 3\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.calculator}>\r\n            <Container maxWidth=\"xs\">\r\n                <Typography variant=\"h3\">CALCULADORA</Typography>\r\n                <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item>\r\n                        <TextField label=\"Altura em cm\" variant=\"filled\" fullWidth type=\"number\" value={altura} onChange={({target}) => setAltura(target.value)} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <TextField label=\"Peso em KG\" variant=\"filled\" fullWidth type=\"number\" value={peso} onChange={({target}) => setPeso(target.value)} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={() => calculateImc()}>Calcular</Button>\r\n                    </Grid>\r\n                    {\r\n                        imc &&\r\n                        <Grid item>\r\n                            <Typography>O seu IMC Ã©: {imc} kg/m2 - {verifyImc()}</Typography>\r\n                        </Grid>\r\n                    }\r\n\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default Calculator"]},"metadata":{},"sourceType":"module"}